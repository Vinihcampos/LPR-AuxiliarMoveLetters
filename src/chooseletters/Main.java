/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chooseletters;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author vinihcampos
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputChar = new javax.swing.JTextField();
        imagePanel = new javax.swing.JPanel();
        characterImageLabel = new javax.swing.JLabel();
        nameImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        inputChar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCharActionPerformed(evt);
            }
        });
        inputChar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputCharKeyPressed(evt);
            }
        });

        imagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Character"));
        imagePanel.setPreferredSize(new java.awt.Dimension(200, 200));
        imagePanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                imagePanelKeyPressed(evt);
            }
        });

        characterImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        characterImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(characterImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(characterImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap())
        );

        nameImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameImageLabel.setText("name_image");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                    .addComponent(inputChar)
                    .addComponent(nameImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputChar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameImageLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputCharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCharActionPerformed

    private void imagePanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imagePanelKeyPressed

    }//GEN-LAST:event_imagePanelKeyPressed

    private void inputCharKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCharKeyPressed
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_ENTER){
            URL location = Main.class.getProtectionDomain().getCodeSource().getLocation();
            
            String folder = inputChar.getText();
                                 
            File source = new File(location.getFile() + "chooseletters/images/" + nameImageLabel.getText());
            
            File destination;
            if(folder != null && !folder.trim().equals(""))
                destination = new File(location.getFile() + "chooseletters/plates/" + folder + "/" + nameImageLabel.getText());
            else
                destination = new File(location.getFile() + "chooseletters/plates/-/" + nameImageLabel.getText());
            
            try {
                Files.copy(source.toPath(), destination.toPath());
                source.delete();
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            //After process
            inputChar.setText("");
            
            File[] files = new File(location.getFile() + "chooseletters/images").listFiles();
        
            if(files.length > 0){
                nameImageLabel.setText(files[0].getName());

                ImageIcon icon = new ImageIcon(location.getFile() + "chooseletters/images/" + nameImageLabel.getText());

                characterImageLabel.setIcon(new ImageIcon(icon.getImage()));
                imagePanel.repaint();
                characterImageLabel.setVisible(true);
                imagePanel.setVisible(true);
            }else{
                this.dispose();
            }
        }
    }//GEN-LAST:event_inputCharKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        URL location = Main.class.getProtectionDomain().getCodeSource().getLocation();
        System.out.println(location.getFile());
        File[] files = new File(location.getFile() + "chooseletters/images").listFiles();
        
        if(files.length > 0){
            nameImageLabel.setText(files[0].getName());
            ImageIcon icon = new ImageIcon(location.getFile() + "chooseletters/images/" + nameImageLabel.getText());
            
            characterImageLabel.setIcon(new ImageIcon(icon.getImage()));
            imagePanel.repaint();
            characterImageLabel.setVisible(true);
            imagePanel.setVisible(true);
        }else{
            this.dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel characterImageLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JTextField inputChar;
    private javax.swing.JLabel nameImageLabel;
    // End of variables declaration//GEN-END:variables
}
